% Geochemistry, Geophysics, Geosystems
% Volume 1, Issue 10
% Free Access
% Mantle solidus: Experimental constraints and the effects of peridotite composition
% Marc M. Hirschmann
% First published: 24 October 2000
% https://doi.org/10.1029/2000GC000070

% MATLAB script to calculate and plot dry peridotite solidus

% Define the pressure range (P in GPa)
P = linspace(0, 10, 100); % Pressure from 0 to 10 GPa with 100 points

% Calculate temperature based on the given equation
T = -5.104 * P.^2 + 132.899 * P + 1120.661; % Temperature in °C
% Constants for realistic depth calculation
rho = 3300; % Density of the upper mantle in kg/m^3 (approx.)
g = 9.81; % Acceleration due to gravity in m/s^2
D = P*1e9/(rho*g)/1000; 
% Loop to calculate the depth for each specific pressure value and store the label
for i = 1:length(specific_pressures)
    % Get the current pressure value
    pressure_value = specific_pressures(i);
    
    % Correct depth calculation for this pressure value (in km)
    depth = (pressure_value * 1e9) / (rho * g) / 1000; % Depth in kilometers
    
    % Round the depth value to 2 decimal places
    rounded_depth = round(depth, 2); 
    
    % Store the corresponding depth as a string
    depth_labels{i} = num2str(rounded_depth); % Convert depth to string and store
end




% Create a high-quality plot
figure; % Create a new figure

% Plot the first curve: Temperature vs. Pressure
plot(T, P, 'LineWidth', 2, 'Color', 'b'); % Plot T vs. P

% Set plot title and labels
title('Dry Peridotite Solidus', 'FontSize', 14, 'FontWeight', 'bold');
xlabel('Temperature (°C)', 'FontSize', 12);
ylabel('Pressure (GPa)', 'FontSize', 12);

% Add legend
legend('Dry Peridotite Solidus', 'Location', 'northeast', 'FontSize', 12);

% Set grid and improve plot quality
grid on;
ax = gca;
ax.YLim = [0 10]; % Limit the Y-axis (Pressure) to 10 GPa
ax.XLim = [min(T) max(T)]; % Adjust X-axis (Temperature) based on calculated values
ax.YTick = 0:1:10; % Y-axis ticks at every 1 GPa
ax.XTick = linspace(min(T), max(T), 6); % X-axis ticks, evenly spaced
ax.FontSize = 12; % Increase font size for better readability

% Reverse the direction of the y-axis for Pressure
set(gca, 'YDir', 'reverse');

% Create a secondary y-axis for Depth (using the already calculated Depth variable)
yyaxis right;

% Define the specific pressure values where you want to show the depth (in GPa)
specific_pressures = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; 

% Set the second y-axis ticks to correspond to the specific pressure values
ax2 = gca;
ax2.YTick = specific_pressures; % Set specific pressures as ticks on the right y-axis

% Initialize an empty cell array for depth labels
depth_labels = cell(length(specific_pressures), 1);

% Loop to calculate the depth for each specific pressure value and store the label
for i = 1:length(specific_pressures)
    % Get the current pressure value
    pressure_value = specific_pressures(i);
    
    % Correct depth calculation for this pressure value (in km)
    depth = (pressure_value * 1e9) / (rho * g) / 1000; % Depth in kilometers
    
    % Round the depth value to 2 decimal places
    rounded_depth = round(depth, 2); 
    
    % Store the corresponding depth as a string
    depth_labels{i} = num2str(rounded_depth); % Convert depth to string and store
end

% Set the second y-axis labels based on the calculated depths for the specific pressures
ax2.YTickLabel = depth_labels; % Apply the depth labels to the right y-axis

% Reverse the direction of the right y-axis (Depth) to make depth increase from top to bottom
set(gca, 'YDir', 'reverse');

% Label the right y-axis
ylabel('Depth (km)', 'FontSize', 12); % Label for the right y-axis

% Set a different line color for the second axis
set(gca, 'YColor', 'r'); % Change color of the right axis labels to red

% Display the plot
hold off;

% Export the plot to a high-quality image with the specified name
saveas(gcf, 'peridotite_solidus_dry.png'); % Save as PNG image with high quality
